<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--配置前端控制器-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--
        设置初始化参数，指定默认的 springmvc 的配置文件
        可以选择将 Spring MVC 的配置文件添加到 /WEB-INF/ 目录下，并将名字改为 (DispatcherServlet 的 servlet-name)-servlet.xml
        -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
    </servlet>

    <!--
    添加前端控制器对应的 mapping 映射
    映射所有的请求，因此最好写成 /
        / 用来匹配所有的请求，但是不会拦截 jsp 页面
        /* 用来匹配所有的请求，但是会拦截 jsp 页面

    此时如果创建一个 html 页面之后，是无法请求到的，原因是：
        每个项目的 web.xml 文件会继承 tomcat 下的 web.xml 文件。
        而在 tomcat-web.xml 文件中包含了一个 DefaultServlet 的处理类用来处理静态资源。
        但是我们在编写自己的 DispatcherServlet 的时候使用了 / 的方式，此方式覆盖了父 web.xml 对于静态资源的处理。
        所以此时所有的静态资源的访问也需要由 DispatcherServlet 来进行处理，但是我们并没有设置对应的 Controller，所以报 404

    为什么 jsp 能处理呢？
        在父 web.xml 文件中包含了一个 JSPServlet 的处理类，会由 tomcat 进行处理，而不是我们定义的 DispatcherServlet
    -->
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>default</servlet-name>
        <servlet-class>org.apache.catalina.servlets.DefaultServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>

    <!--&lt;!&ndash;此过滤器完成请求方式的转换，将 post 请求转换为 put 或 delete&ndash;&gt;-->
    <!--<filter>-->
        <!--<filter-name>hidden</filter-name>-->
        <!--<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>hidden</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

</web-app>